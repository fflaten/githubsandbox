# This is a basic workflow to help you get started with Actions

name: CIdemo

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Print multi-line string
        run: |
          $str = @"
          Hello World
          Again
          And again
          "@

          [Console]::WriteLine("$($PSStyle.Foreground.Red)$str$($PSStyle.Reset)")
        shell: pwsh

      - name: Print multi-line string using host UI ansi
        run: |
          $str = @"
          Hello World
          Again
          And again
          "@

          $host.UI.WriteLine("$($PSStyle.Foreground.Red)$str$($PSStyle.Reset)")
        shell: pwsh

      - name: Print multi-line string using host UI consolecolor
        run: |
          $oldFg = $host.UI.RawUI.ForegroundColor
          $oldBg = $host.UI.RawUI.BackgroundColor
          $host.UI.RawUI.ForegroundColor = 'Red'
          $host.UI.RawUI.BackgroundColor = 'Yellow'

          $str = @"
          Hello World
          Again
          And again
          "@

          $host.UI.WriteLine("$str")

          $host.UI.RawUI.ForegroundColor = $oldFg
          $host.UI.RawUI.BackgroundColor = $oldBg
        shell: pwsh

      - name: Print multi-line string using host UI consolecolor
        run: |
          $str = @"
          Hello World
          Again
          And again
          "@

          $host.UI.Write("$($PSStyle.Foreground.Red)$str$($PSStyle.Reset)")
        shell: pwsh

      - name: Print multi-line string with repeating ANSI
        run: |
          $str = @"
          $($PSStyle.Foreground.Red)Hello World
          $($PSStyle.Foreground.Red)Again
          And again
          "@

          [Console]::WriteLine("$str$($PSStyle.Reset)")
        shell: pwsh

      - name: Print multi-line string with split
        run: |
          $str = @"
          Hello World
          Again
          And again
          "@

          $lines = $str -split [Environment]::NewLine
          foreach ($line in $lines) { [Console]::WriteLine("$($PSStyle.Foreground.Red)$line$($PSStyle.Reset)") }
        shell: pwsh
